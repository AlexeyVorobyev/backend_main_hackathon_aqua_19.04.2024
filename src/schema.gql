# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum ESortDirection {
  ascending
  descending
}

enum EUserSex {
  female
  male
  notStated
}

type Query {
  user: TUserQueries!
}

input TDatePeriodInput {
  """End date"""
  endDate: DateTime

  """Start date"""
  startDate: DateTime
}

input TIdInput {
  """Identification property with uuid signature"""
  id: UUID!
}

type TListMetaAttributes {
  """Current page"""
  currentPage: Int!

  """Elements per page"""
  elementsPerPage: Int!

  """Total amount of elements in list"""
  totalElements: Int!

  """Total amount of pages in list"""
  totalPages: Int!
}

type TOperationMetaAttributes {
  """Operation delta timestamp"""
  deltaTimestamp: Float!

  """Operation finish timestamp"""
  finishTimestamp: Float!

  """Operation start timestamp"""
  startTimestamp: Float!
}

input TSortInput {
  """Name of column"""
  columnName: String

  """Sort direction"""
  direction: ESortDirection
}

type TUserAttributes {
  """User bonus points"""
  bonusPoints: Float!

  """Entity creation datetime"""
  createdAt: DateTime!

  """Date of birth"""
  dateOfBirth: DateTime!

  """Id of user external"""
  externalId: String!

  """Entity id in UUID format"""
  id: UUID!

  """Status metadata"""
  operationMeta: TOperationMetaAttributes!

  """User sex"""
  sex: EUserSex!

  """Entity last update datetime"""
  updatedAt: DateTime!
}

type TUserAttributesOmitOperationMeta {
  """User bonus points"""
  bonusPoints: Float!

  """Entity creation datetime"""
  createdAt: DateTime!

  """Date of birth"""
  dateOfBirth: DateTime!

  """Id of user external"""
  externalId: String!

  """Entity id in UUID format"""
  id: UUID!

  """User sex"""
  sex: EUserSex!

  """Entity last update datetime"""
  updatedAt: DateTime!
}

type TUserListAttributes {
  data: [TUserAttributesOmitOperationMeta!]!
  meta: TListMetaAttributes!

  """Status metadata"""
  operationMeta: TOperationMetaAttributes!
}

input TUserListInput {
  """Datetime period criteria"""
  createDatePeriod: TDatePeriodInput

  """Filter by entity id. Multiple criteria allowed with OR functionality"""
  id: [UUID!]

  """Page of list"""
  page: Int = 0

  """Amount of elements per page"""
  perPage: Int = 8

  """SimpleFilter"""
  simpleFilter: String

  """Sorting criteria"""
  sort: [TSortInput!] = []

  """Datetime period criteria"""
  updateDatePeriod: TDatePeriodInput
}

type TUserQueries {
  """Provides functionality of getting list of users."""
  list(input: TUserListInput): TUserListAttributes!

  """Provides functionality of getting information about user by id."""
  record(idInput: TIdInput!): TUserAttributes!
}

"""UUID Validator"""
scalar UUID